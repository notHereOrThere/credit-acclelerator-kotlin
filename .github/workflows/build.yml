name: Conditional Build and Publish

on:
  push:
    branches:
      - master

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      application: ${{ steps.filter.outputs.application }}
      deal: ${{ steps.filter.outputs.deal }}
      dossier: ${{ steps.filter.outputs.dossier }}
      conveyor: ${{ steps.filter.outputs.conveyor }}
      gateway: ${{ steps.filter.outputs.gateway }}
      audit: ${{ steps.filter.outputs.audit }}
      auth: ${{ steps.filter.outputs.auth }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine changed services
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            application:
              - 'application/**'
            deal:
              - 'deal/**'
            dossier:
              - 'dossier/**'
            conveyor:
              - 'conveyor/**'
            gateway:
              - 'gateway/**'
            audit:
              - 'audit/**'
            auth:
              - 'auth/**'

  build-and-test:
    needs: determine-changes
    runs-on: ubuntu-latest
    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:7.2.2
        ports:
          - 2181:2181
        options: >-
          --env ZOOKEEPER_CLIENT_PORT=2181
      kafka:
        image: confluentinc/cp-kafka:7.2.2
        ports:
          - 9092:9092
        options: >-
          --env KAFKA_BROKER_ID:1
          --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
          --env KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          --env KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
          --env KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          --env KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          --env KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          --env KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          --env KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    strategy:
      matrix:
        service: [application, deal, dossier, conveyor, gateway, audit, auth]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Skip job if service not changed
        if: ${{ needs.determine-changes.outputs[matrix.service] != 'true' }}
        run: echo "No changes in ${{ matrix.service }}. Skipping job." && exit 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set environment variables
        run: echo "SPRING_KAFKA_BOOTSTRAP_SERVERS=localhost:9092" >> $GITHUB_ENV

      - name: Build and verify ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          mvn -B clean verify

      - name: Upload Test Coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ matrix.service }}/target/site/jacoco/
          flags: ${{ matrix.service }}
          name: codecov-umbrella

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [application, deal, dossier, conveyor, gateway, audit, auth]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Skip job if service not changed
        if: ${{ needs.determine-changes.outputs[matrix.service] != 'true' }}
        run: echo "No changes in ${{ matrix.service }}. Skipping job." && exit 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ibra26gim/${{ matrix.service }}:latest
